name: Build

on:
  pull_request:
    branches: [ "staging" ]

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/coffee-chooser

jobs:
  go-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
          cache-dependency-path: "**/*.sum"
      - name: Download dependencies
        run: make deps
      - name: Build binary
        run: make build

  unit-tests:
    runs-on: ubuntu-latest
    needs: go-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
          cache-dependency-path: "**/*.sum"
      - name: Download dependencies
        run: make deps
      - name: Run tests
        run: make test

  docker-build:
    runs-on: ubuntu-latest
    needs: [ go-build, unit-tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Git variables
        shell: bash
        run: |
          echo "SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            APP_VERSION=${{ steps.meta.outputs.tags }}
            MONGODB_URL=${{ secrets.MONGO_CONNECTION_STRING }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
