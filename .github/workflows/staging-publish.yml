name: publish staging pre-release

on:
  push:
    tags:
      - "v*.*.*-beta.*"

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/coffee-chooser
  EC2_HOST: ubuntu@ec2-35-153-136-59.compute-1.amazonaws.com

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get tag name
        id: meta
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "TAGS=$(echo ${GITHUB_REF_NAME#v})" >> "$GITHUB_ENV"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY_IMAGE }}:${{ env.TAGS }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_SECRET_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.EC2_HOST }} 'sudo docker pull ${{ env.REGISTRY_IMAGE }}:${{ env.TAGS }}'
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.EC2_HOST }} 'sudo docker stop coffee-chooser || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.EC2_HOST }} 'sudo docker rm coffee-chooser || true'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.EC2_HOST }} 'sudo docker run -d --name coffee-chooser -p 80:8080 ${{ env.REGISTRY_IMAGE }}:${{ env.TAGS }}'
